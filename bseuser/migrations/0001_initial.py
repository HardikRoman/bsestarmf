# Generated by Django 4.2 on 2023-04-10 04:51

import bseuser.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(blank=True, choices=[('01', 'Home'), ('02', 'Office')], max_length=2)),
                ('address1', models.CharField(max_length=40)),
                ('address2', models.CharField(max_length=40)),
                ('address3', models.CharField(blank=True, max_length=40, null=True)),
                ('pincode', models.CharField(blank=True, help_text='sample: 110049', max_length=6, validators=[django.core.validators.RegexValidator(message='Pin code must be entered in the format: 110049', regex='^\\d{6}$')])),
                ('is_primary', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clientmaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_code', models.CharField(max_length=10, unique=True)),
                ('client_holding', models.CharField(blank=True, choices=[('SI', 'Single'), ('JO', 'Joint'), ('AS', 'Anyone or Survivor')], max_length=2)),
                ('client_tax_status', models.CharField(blank=True, choices=[('01', 'Individual'), ('02', 'On behalf of minor'), ('03', 'HUF'), ('04', 'Company'), ('21', 'NRE'), ('24', 'NRO'), ('23', 'FII'), ('12', 'DFI'), ('08', 'TRUST'), ('05', 'AOP'), ('47', 'LLP'), ('10', 'Others'), ('06', 'Partnership Firm')], max_length=2)),
                ('client_occupation_code', models.CharField(blank=True, choices=[('01', 'Business'), ('02', 'Services'), ('03', 'Professional'), ('04', 'Agriculture'), ('05', 'Retired'), ('06', 'Housewife'), ('07', 'Student'), ('08', 'Others')], max_length=2)),
                ('first_name', models.CharField(max_length=35)),
                ('middle_name', models.CharField(max_length=35)),
                ('last_name', models.CharField(max_length=35)),
                ('date_of_birth', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message="Date of birth must be entered in the format: 'DD/MM/YYYY'", regex='^[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}$')])),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=2)),
                ('father_first_name', models.CharField(help_text='Father/ Husband/ Guardian Name', max_length=35)),
                ('father_last_name', models.CharField(blank=True, max_length=35, null=True)),
                ('pan_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('[A-Z]{5}[0-9]{4}[A-Z]{1}')])),
                ('email', models.EmailField(max_length=254)),
                ('communication_mode', models.CharField(default='E', max_length=1)),
                ('divident_pay_mode', models.CharField(blank=True, choices=[('01', 'Cheque'), ('02', 'Direct Credit'), ('03', 'ECS'), ('04', 'ECS'), ('05', 'RTGS')], max_length=2)),
                ('first_holder_ckyc_number', models.CharField(blank=True, max_length=14, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('first_holder_kyc_type', models.CharField(blank=True, choices=[('K', 'KRA Compliant'), ('C', 'CKYC Compliant'), ('B', 'BIOMETRIC KYC'), ('E', 'Aadhaar Ekyc PAN')], max_length=2)),
                ('second_holder_ckyc_number', models.CharField(blank=True, max_length=14, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('second_holder_kyc_type', models.CharField(blank=True, choices=[('K', 'KRA Compliant'), ('C', 'CKYC Compliant'), ('B', 'BIOMETRIC KYC'), ('E', 'Aadhaar Ekyc PAN')], max_length=2)),
                ('third_holder_ckyc_number', models.CharField(blank=True, max_length=14, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('third_holder_kyc_type', models.CharField(blank=True, choices=[('K', 'KRA Compliant'), ('C', 'CKYC Compliant'), ('B', 'BIOMETRIC KYC'), ('E', 'Aadhaar Ekyc PAN')], max_length=2)),
                ('aadhar_updated', models.CharField(blank=True, max_length=1)),
                ('paperless_flag', models.CharField(blank=True, choices=[('P', 'Paper'), ('Z', 'paperless')], max_length=2)),
                ('cancel_check', models.ImageField(upload_to=bseuser.models.user_directory_path)),
                ('aadhar_number', models.PositiveIntegerField(validators=[django.core.validators.RegexValidator('^\\d{1,12}$')])),
                ('anniversary_date', models.DateField(blank=True, null=True)),
                ('mobile', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(1999999999)])),
                ('phone', models.PositiveIntegerField(blank=True, null=True)),
                ('broker_code', models.IntegerField(blank=True, null=True)),
                ('emfi_code', models.CharField(blank=True, max_length=20, null=True)),
                ('family_group_code', models.CharField(blank=True, max_length=6, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('marital_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=2)),
                ('blood_group', models.CharField(blank=True, choices=[('a+', 'A+'), ('a-', 'A-'), ('b+', 'B+'), ('b-', 'B-'), ('o+', 'O+'), ('o-', 'O-'), ('ab+', 'AB+'), ('ab-', 'AB-')], max_length=3)),
                ('income_slab', models.CharField(blank=True, choices=[(31, 'Below 1 Lakh'), (32, '> 1 <=5 Lacs'), (33, '>5 <=10 Lacs'), (34, '>10 <= 25 Lacs'), (35, '> 25 Lacs < = 1 Crore'), (36, 'Above 1 Crore')], max_length=2)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=35)),
                ('middle_name', models.CharField(max_length=35)),
                ('last_name', models.CharField(max_length=35)),
                ('broker_code', models.IntegerField(blank=True, null=True)),
                ('joining_date', models.DateField()),
                ('releaving_date', models.DateField(blank=True, null=True)),
                ('mobile_number', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(1999999999)])),
                ('phone_number', models.PositiveIntegerField(blank=True, null=True)),
                ('pancard', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('[A-Z]{5}[0-9]{4}[A-Z]{1}')])),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField()),
                ('anniversy', models.DateField(blank=True, null=True)),
                ('address', models.TextField()),
                ('pincode', models.CharField(blank=True, help_text='sample: 110049', max_length=6, validators=[django.core.validators.RegexValidator(message='Pin code must be entered in the format: 110049', regex='^\\d{6}$')])),
                ('blood_group', models.CharField(blank=True, choices=[('a+', 'A+'), ('a-', 'A-'), ('b+', 'B+'), ('b-', 'B-'), ('o+', 'O+'), ('o-', 'O-'), ('ab+', 'AB+'), ('ab-', 'AB-')], max_length=3)),
                ('marital_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married')], max_length=2)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=2)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.country')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.country')),
            ],
        ),
        migrations.CreateModel(
            name='Branchmaster',
            fields=[
                ('address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='bseuser.address')),
                ('branch_code', models.AutoField(primary_key=True, serialize=False)),
                ('branch_name', models.CharField(max_length=100)),
                ('branch_contact', models.CharField(max_length=20)),
                ('branch_email', models.EmailField(max_length=254)),
                ('location', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            bases=('bseuser.address',),
        ),
        migrations.CreateModel(
            name='Superdistributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=35)),
                ('middle_name', models.CharField(max_length=35)),
                ('last_name', models.CharField(max_length=35)),
                ('broker_code', models.IntegerField(blank=True, null=True)),
                ('joining_date', models.DateField()),
                ('releaving_date', models.DateField(blank=True, null=True)),
                ('mobile_number', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(1999999999)])),
                ('phone_number', models.PositiveIntegerField(blank=True, null=True)),
                ('pancard', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('[A-Z]{5}[0-9]{4}[A-Z]{1}')])),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField()),
                ('anniversy', models.DateField(blank=True, null=True)),
                ('address', models.TextField()),
                ('pincode', models.CharField(blank=True, help_text='sample: 110049', max_length=6, validators=[django.core.validators.RegexValidator(message='Pin code must be entered in the format: 110049', regex='^\\d{6}$')])),
                ('blood_group', models.CharField(blank=True, choices=[('a+', 'A+'), ('a-', 'A-'), ('b+', 'B+'), ('b-', 'B-'), ('o+', 'O+'), ('o-', 'O-'), ('ab+', 'AB+'), ('ab-', 'AB-')], max_length=3)),
                ('marital_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married')], max_length=2)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=2)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.state')),
                ('super_distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.superdistributor')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.branchmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Referencemaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=35)),
                ('middle_name', models.CharField(max_length=35)),
                ('last_name', models.CharField(max_length=35)),
                ('broker_code', models.IntegerField(blank=True, null=True)),
                ('joining_date', models.DateField()),
                ('releaving_date', models.DateField(blank=True, null=True)),
                ('mobile_number', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(1999999999)])),
                ('phone_number', models.PositiveIntegerField(blank=True, null=True)),
                ('pancard', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('[A-Z]{5}[0-9]{4}[A-Z]{1}')])),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField()),
                ('anniversy', models.DateField(blank=True, null=True)),
                ('address', models.TextField()),
                ('pincode', models.CharField(blank=True, help_text='sample: 110049', max_length=6, validators=[django.core.validators.RegexValidator(message='Pin code must be entered in the format: 110049', regex='^\\d{6}$')])),
                ('blood_group', models.CharField(blank=True, choices=[('a+', 'A+'), ('a-', 'A-'), ('b+', 'B+'), ('b-', 'B-'), ('o+', 'O+'), ('o-', 'O-'), ('ab+', 'AB+'), ('ab-', 'AB-')], max_length=3)),
                ('marital_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married')], max_length=2)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=2)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.country')),
                ('distribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.distributor')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.state')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.branchmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Nomineemaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=35)),
                ('middle_name', models.CharField(max_length=35)),
                ('last_name', models.CharField(max_length=35)),
                ('date_of_birth', models.DateField()),
                ('client_nominee_relation', models.CharField(choices=[('01', 'Mother'), ('02', 'Father'), ('03', 'Wife'), ('04', 'Husband'), ('05', 'Son'), ('06', 'Mother'), ('07', 'Daughter'), ('08', 'Nephews'), ('09', 'Uncle'), ('10', 'Aunt')], max_length=3)),
                ('share_appicable', models.DecimalField(decimal_places=2, max_digits=5)),
                ('mobile', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(1999999999)])),
                ('email', models.EmailField(max_length=254)),
                ('nominee_proof', models.ImageField(upload_to=bseuser.models.nominee_proof_directory_path)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.clientmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Employeemaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('emp_id', models.CharField(max_length=6)),
                ('is_active', models.BooleanField(default=True)),
                ('blood_group', models.CharField(blank=True, choices=[('a+', 'A+'), ('a-', 'A-'), ('b+', 'B+'), ('b-', 'B-'), ('o+', 'O+'), ('o-', 'O-'), ('ab+', 'AB+'), ('ab-', 'AB-')], max_length=3)),
                ('marital_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married')], max_length=2)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=2)),
                ('anniversary_date', models.DateField(blank=True, null=True)),
                ('aadhar_number', models.PositiveIntegerField(validators=[django.core.validators.RegexValidator('^\\d{1,12}$')])),
                ('mobile', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(1999999999)])),
                ('phone', models.PositiveIntegerField(blank=True, null=True)),
                ('joining_date', models.DateField()),
                ('releaving_date', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.designation')),
                ('reporting_aurthority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.employeemaster')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.branchmaster')),
            ],
        ),
        migrations.AddField(
            model_name='distributor',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.state'),
        ),
        migrations.AddField(
            model_name='distributor',
            name='super_distributor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.superdistributor'),
        ),
        migrations.CreateModel(
            name='Demat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dp_details', models.CharField(max_length=100)),
                ('dp_name', models.CharField(max_length=100)),
                ('dp_id', models.CharField(max_length=16)),
                ('benificary_acc_no', models.CharField(max_length=30)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.clientmaster')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.country'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.state'),
        ),
        migrations.CreateModel(
            name='Bankmaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('branch_name', models.CharField(max_length=40)),
                ('branch_city', models.CharField(max_length=35)),
                ('account_type', models.CharField(choices=[('SB', 'Savings'), ('CB', 'Current'), ('NE', 'NRE'), ('NO', 'NRO')], default='SB', max_length=2)),
                ('account_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Account number must be between 9 and 16 chars long', regex='^\\d{9,16}$')])),
                ('ifsc_code', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='IFSC code must be in the format: HDFC0000291', regex='^[A-Z]{4}0[A-Z0-9]{6}$')])),
                ('micr_code', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(message='MICR code must be entered in the format: 110240212', regex='^\\w{9}$')])),
                ('anr_no', models.CharField(blank=True, max_length=15, null=True)),
                ('anr_valid', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('Superdistributor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Superdistributor', to='bseuser.superdistributor')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client', to='bseuser.clientmaster')),
                ('distribution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='distribution', to='bseuser.distributor')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Employeemaster', to='bseuser.employeemaster')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Employeemaster', to='bseuser.referencemaster')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.city'),
        ),
        migrations.AddField(
            model_name='address',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.clientmaster'),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.country'),
        ),
        migrations.AddField(
            model_name='address',
            name='nominee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.nomineemaster'),
        ),
        migrations.AddField(
            model_name='address',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bseuser.state'),
        ),
        migrations.AddField(
            model_name='distributor',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bseuser.branchmaster'),
        ),
    ]
